/* -*- mode: c -*- */

/* This file is part of the APRON Library, released under LGPL license.
   Please read the COPYING file packaged in the distribution  */

quote(C, "\n\
#include <limits.h>\n\
#include \"ap_manager.h\"\n\
#include \"apron_caml.h\"\n\
\n\
#define False tbool_false \n\
#define True tbool_true \n\
#define Top tbool_top \n\
\n\
#define Funid_unknown    AP_FUNID_UNKNOWN\n\
#define Funid_copy    AP_FUNID_COPY\n\
#define Funid_free    AP_FUNID_FREE\n\
#define Funid_asize    AP_FUNID_ASIZE\n\
#define Funid_minimize    AP_FUNID_MINIMIZE\n\
#define Funid_canonicalize    AP_FUNID_CANONICALIZE\n\
#define Funid_approximate    AP_FUNID_APPROXIMATE\n\
#define Funid_is_minimal    AP_FUNID_IS_MINIMAL\n\
#define Funid_is_canonical    AP_FUNID_IS_CANONICAL\n\
#define Funid_fprint    AP_FUNID_FPRINT\n\
#define Funid_fprintdiff    AP_FUNID_FPRINTDIFF\n\
#define Funid_fdump    AP_FUNID_FDUMP\n\
#define Funid_serialize_raw    AP_FUNID_SERIALIZE_RAW\n\
#define Funid_deserialize_raw    AP_FUNID_DESERIALIZE_RAW\n\
#define Funid_bottom    AP_FUNID_BOTTOM\n\
#define Funid_top    AP_FUNID_TOP\n\
#define Funid_of_box    AP_FUNID_OF_BOX\n\
#define Funid_of_lincons_array    AP_FUNID_OF_LINCONS_ARRAY\n\
#define Funid_dimension    AP_FUNID_DIMENSION\n\
#define Funid_is_bottom    AP_FUNID_IS_BOTTOM\n\
#define Funid_is_top    AP_FUNID_IS_TOP\n\
#define Funid_is_leq    AP_FUNID_IS_LEQ\n\
#define Funid_is_eq    AP_FUNID_IS_EQ\n\
#define Funid_is_dimension_unconstrained    AP_FUNID_IS_DIMENSION_UNCONSTRAINED\n\
#define Funid_sat_interval    AP_FUNID_SAT_INTERVAL\n\
#define Funid_sat_lincons    AP_FUNID_SAT_LINCONS\n\
#define Funid_bound_dimension    AP_FUNID_BOUND_DIMENSION\n\
#define Funid_bound_linexpr    AP_FUNID_BOUND_LINEXPR\n\
#define Funid_to_box    AP_FUNID_TO_BOX\n\
#define Funid_to_lincons_array    AP_FUNID_TO_LINCONS_ARRAY\n\
#define Funid_to_generator_array    AP_FUNID_TO_GENERATOR_ARRAY\n\
#define Funid_meet    AP_FUNID_MEET\n\
#define Funid_meet_array    AP_FUNID_MEET_ARRAY\n\
#define Funid_meet_lincons_array    AP_FUNID_MEET_LINCONS_ARRAY\n\
#define Funid_join    AP_FUNID_JOIN\n\
#define Funid_join_array    AP_FUNID_JOIN_ARRAY\n\
#define Funid_add_ray_array    AP_FUNID_ADD_RAY_ARRAY\n\
#define Funid_assign_linexpr    AP_FUNID_ASSIGN_LINEXPR\n\
#define Funid_assign_linexpr_array    AP_FUNID_ASSIGN_LINEXPR_ARRAY\n\
#define Funid_substitute_linexpr    AP_FUNID_SUBSTITUTE_LINEXPR\n\
#define Funid_substitute_linexpr_array    AP_FUNID_SUBSTITUTE_LINEXPR_ARRAY\n\
#define Funid_add_dimensions    AP_FUNID_ADD_DIMENSIONS\n\
#define Funid_remove_dimensions    AP_FUNID_REMOVE_DIMENSIONS\n\
#define Funid_permute_dimensions    AP_FUNID_PERMUTE_DIMENSIONS\n\
#define Funid_forget_array    AP_FUNID_FORGET_ARRAY\n\
#define Funid_expand    AP_FUNID_EXPAND\n\
#define Funid_fold    AP_FUNID_FOLD\n\
#define Funid_widening    AP_FUNID_WIDENING\n\
#define Funid_closure    AP_FUNID_CLOSURE\n\
#define Funid_size    AP_FUNID_SIZE\n\
#define Funid_change_environment    AP_FUNID_CHANGE_ENVIRONMENT\n\
#define Funid_rename_array    AP_FUNID_RENAME_ARRAY\n\
#define Funid_size2    AP_FUNID_SIZE2\n\
\n\
#define Exc_none    AP_EXC_NONE\n\
#define Exc_timeout    AP_EXC_TIMEOUT\n\
#define Exc_out_of_space    AP_EXC_OUT_OF_SPACE\n\
#define Exc_overflow    AP_EXC_OVERFLOW\n\
#define Exc_invalid_argument    AP_EXC_INVALID_ARGUMENT\n\
#define Exc_not_implemented    AP_EXC_NOT_IMPLEMENTED\n\
#define Exc_size    AP_EXC_SIZE\n\
")

enum tbool_t {
  False,
  True,
  Top
};

enum ap_funid_t {
  Funid_unknown,
  Funid_copy,
  Funid_free,
  Funid_asize, /* For avoiding name conflict with Funid_SIZE */
  Funid_minimize,
  Funid_canonicalize,
  Funid_approximate,
  Funid_is_minimal,
  Funid_is_canonical,
  Funid_fprint,
  Funid_fprintdiff,
  Funid_fdump,
  Funid_serialize_raw,
  Funid_deserialize_raw,
  Funid_bottom,
  Funid_top,
  Funid_of_box,
  Funid_of_lincons_array,
  Funid_dimension,
  Funid_is_bottom,
  Funid_is_top,
  Funid_is_leq,
  Funid_is_eq,
  Funid_is_dimension_unconstrained,
  Funid_sat_interval,
  Funid_sat_lincons,
  Funid_bound_dimension,
  Funid_bound_linexpr,
  Funid_to_box,
  Funid_to_lincons_array,
  Funid_to_generator_array,
  Funid_meet,
  Funid_meet_array,
  Funid_meet_lincons_array,
  Funid_join,
  Funid_join_array,
  Funid_add_ray_array,
  Funid_assign_linexpr,
  Funid_assign_linexpr_array,
  Funid_substitute_linexpr,
  Funid_substitute_linexpr_array,
  Funid_add_dimensions,
  Funid_remove_dimensions,
  Funid_permute_dimensions,
  Funid_forget_array,
  Funid_expand,
  Funid_fold,
  Funid_widening,
  Funid_closure,
  Funid_size,
  Funid_change_environment,
  Funid_rename_array,
  Funid_size2
};

enum ap_exc_t {
  Exc_none,           /* no exception detected */
  Exc_timeout,        /* timeout detected */
  Exc_out_of_space,   /* out of space detected */
  Exc_overflow,        /* magnitude overflow detected */
  Exc_invalid_argument, /* invalid arguments */
  Exc_not_implemented, /* not implemented */
  Exc_size
};

struct ap_funopt_t {
  int algorithm;
  /* Algorithm selection:
     - 0 is default algorithm;
     - MAX_INT is most accurate available;
     - MIN_INT is most efficient available;
     - otherwise, no accuracy or speed meaning
  */
  int approx_before;
  int approx_after;
  /* Related to the notion of approximation/reduction.
     Indicates which kind of "approximation" may be performed on the
     argument(s) before the algorithm, and on the result delivered
     by the algorithm. 0 is default behaviour. */
  unsigned int timeout; /* unit !? */
  /* Above the given computation time, the function may abort with the
     exception flag flag_time_out on.
  */
  unsigned int max_object_size; /* in abstract object size unit. */
  /* If during the computation, the size of some object reach this limit, the
     function may abort with the exception flag flag_out_of_space on.
  */
  boolean flag_exact_wanted;
  /* return information about exactitude if possible
  */
  boolean flag_best_wanted;
  /* return information about best correct approximation if possible
  */
};

struct ap_exclog_t {
  enum ap_exc_t exn;
  enum ap_funid_t funid;
  [string]char* msg;
};

typedef [abstract,
	 finalize(camlidl_apron_manager_ptr_finalize)]
struct ap_manager_ptr ap_manager_ptr;

quote(MLMLI,"(** Managers *)")

quote(MLI,"(** Get the name of the effective library which allocated the manager *)")
[string]const char* ap_manager_get_library(ap_manager_ptr man);

quote(MLI,"(** Get the version of the effective library which allocated the manager *)")
[string]const char* ap_manager_get_version(ap_manager_ptr man);


quote(MLI,"(** Return the default options for any function ([0] or [false] for al fields) *)")
void ap_funopt_make([ref,out]struct ap_funopt_t* x)
     quote(call,"ap_funopt_init(x);");

quote(MLI,"(** Get the options sets for the function. The result is a copy of the internal structure and may be freely modified *)")
struct ap_funopt_t ap_manager_get_funopt(ap_manager_ptr man, enum ap_funid_t funid);
quote(MLI,"(** Set the options for the function *)")
void ap_manager_set_funopt(ap_manager_ptr man, enum ap_funid_t funid, [ref]struct ap_funopt_t* funopt);

quote(MLI,"(** Get the corresponding result flags *)")
enum tbool_t ap_manager_get_flag_exact(ap_manager_ptr man);
enum tbool_t ap_manager_get_flag_best(ap_manager_ptr man);


quote(MLI,"(** Exception raised by functions of the interface *)")
quote(MLMLI,"exception Error of ap_exclog_t");

quote(ML,"\
let _ = Callback.register_exception \"apron exception\" \
	  (Error { exn=Exc_none; funid = Funid_bottom; msg = \"dummy\"; })")

quote(MLI,"val string_of_tbool: tbool_t -> string")
quote(MLI,"val string_of_funid: ap_funid_t -> string")
quote(MLI,"val string_of_exc: ap_exc_t -> string")
quote(MLI,"val print_tbool: Format.formatter -> tbool_t -> unit")
quote(ML,"\n\
let string_of_tbool = function\n\
| False -> \"False\"\n\
| True -> \"True\"\n\
| Top -> \"Top\"\n\
let string_of_funid = function\n\
| Funid_unknown -> \"Funid_unknown\"\n\
| Funid_copy -> \"Funid_copy\"\n\
| Funid_free -> \"Funid_free\"\n\
| Funid_asize -> \"Funid_asize\"\n\
| Funid_minimize -> \"Funid_minimize\"\n\
| Funid_canonicalize -> \"Funid_canonicalize\"\n\
| Funid_approximate -> \"Funid_approximate\"\n\
| Funid_is_minimal -> \"Funid_is_minimal\"\n\
| Funid_is_canonical -> \"Funid_is_canonical\"\n\
| Funid_fprint -> \"Funid_fprint\"\n\
| Funid_fprintdiff -> \"Funid_fprintdiff\"\n\
| Funid_fdump -> \"Funid_fdump\"\n\
| Funid_serialize_raw -> \"Funid_serialize_raw\"\n\
| Funid_deserialize_raw -> \"Funid_deserialize_raw\"\n\
| Funid_bottom -> \"Funid_bottom\"\n\
| Funid_top -> \"Funid_top\"\n\
| Funid_of_box -> \"Funid_of_box\"\n\
| Funid_of_lincons_array -> \"Funid_of_lincons_array\"\n\
| Funid_dimension -> \"Funid_dimension\"\n\
| Funid_is_bottom -> \"Funid_is_bottom\"\n\
| Funid_is_top -> \"Funid_is_top\"\n\
| Funid_is_leq -> \"Funid_is_leq\"\n\
| Funid_is_eq -> \"Funid_is_eq\"\n\
| Funid_is_dimension_unconstrained -> \"Funid_is_dimension_unconstrained\"\n\
| Funid_sat_interval -> \"Funid_sat_interval\"\n\
| Funid_sat_lincons -> \"Funid_sat_lincons\"\n\
| Funid_bound_dimension -> \"Funid_bound_dimension\"\n\
| Funid_bound_linexpr -> \"Funid_bound_linexpr\"\n\
| Funid_to_box -> \"Funid_to_box\"\n\
| Funid_to_lincons_array -> \"Funid_to_lincons_array\"\n\
| Funid_to_generator_array -> \"Funid_to_generator_array\"\n\
| Funid_meet -> \"Funid_meet\"\n\
| Funid_meet_array -> \"Funid_meet_array\"\n\
| Funid_meet_lincons_array -> \"Funid_meet_lincons_array\"\n\
| Funid_join -> \"Funid_join\"\n\
| Funid_join_array -> \"Funid_join_array\"\n\
| Funid_add_ray_array -> \"Funid_add_ray_array\"\n\
| Funid_assign_linexpr -> \"Funid_assign_linexpr\"\n\
| Funid_assign_linexpr_array -> \"Funid_assign_linexpr_array\"\n\
| Funid_substitute_linexpr -> \"Funid_substitute_linexpr\"\n\
| Funid_substitute_linexpr_array -> \"Funid_substitute_linexpr_array\"\n\
| Funid_add_dimensions -> \"Funid_add_dimensions\"\n\
| Funid_remove_dimensions -> \"Funid_remove_dimensions\"\n\
| Funid_permute_dimensions -> \"Funid_permute_dimensions\"\n\
| Funid_forget_array -> \"Funid_forget_array\"\n\
| Funid_expand -> \"Funid_expand\"\n\
| Funid_fold -> \"Funid_fold\"\n\
| Funid_widening -> \"Funid_widening\"\n\
| Funid_closure -> \"Funid_closure\"\n\
| Funid_size -> \"Funid_size\"\n\
| Funid_change_environment -> \"Funid_change_environment\"\n\
| Funid_rename_array -> \"Funid_rename_array\"\n\
| Funid_size2 -> \"Funid_size2\"\n\
\n\
let string_of_exc = function\n\
| Exc_none -> \"Exc_none\"\n\
| Exc_timeout -> \"Exc_timeout\"\n\
| Exc_out_of_space -> \"Exc_out_of_space\"\n\
| Exc_overflow -> \"Exc_overflow\"\n\
| Exc_invalid_argument -> \"Exc_invalid_argument\"\n\
| Exc_not_implemented -> \"Exc_not_implemented\"\n\
| Exc_size -> \"Exc_size\"\n\
\n\
let print_tbool fmt x = Format.pp_print_string fmt (string_of_tbool x)\n\
")
