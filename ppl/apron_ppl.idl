/* -*- mode: c -*- */

/*
 * apron_ppl.idl
 *
 * OCaml interface specification for camlidl
 *
 * APRON Library / PPL library wrapper
 *
 * Copyright (C) Antoine Mine' 2006
 *
 */

/* This file is part of the APRON Library, released under LGPL license.  
   Please read the COPYING file packaged in the distribution.
*/

quote(C,"/*\n This file is part of the APRON Library, released under LGPL license.\n Please read the COPYING file packaged in the distribution.\n*/")
quote(MLMLI,"(*\n This file is part of the APRON Library, released under LGPL license.\n Please read the COPYING file packaged in the distribution.\n*)")

quote(MLI,"(** APRON PPL: Parma Polyhedra Library wrapper. \n*)\n\n")
quote(MLI,"(* *)\n\n");

quote(C,"#include \"apron_ppl.h\"")
quote(C,"#include \"apron_caml.h\"")

quote(C,"#define I0_CHECK_EXC(man) if (man->result.exn!=AP_EXC_NONE){ value v = camlidl_c2ml_manager_struct_ap_exclog_t(man->result.exclog,_ctx); caml_raise_with_arg(*caml_named_value(\"apron exception\"),v); } ")

import "generator0.idl";
import "abstract0.idl";
import "scalar.idl";
import "manager.idl";

ap_manager_ptr ap_ppl_poly_manager_alloc(boolean strict);
quote(MLI,"(** Allocate a new manager to manipulate PPL Polyhedra. *)\n\n")

ap_manager_ptr ap_ppl_grid_manager_alloc();
quote(MLI,"(** Allocate a new manager to manipulate PPL Grids. *)\n\n")
